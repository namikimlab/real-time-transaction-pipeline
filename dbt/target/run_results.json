{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.9", "generated_at": "2025-06-06T07:06:30.063967Z", "invocation_id": "19ab9b6d-6d7e-4229-9783-21d54529c7f5", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T07:06:29.771103Z", "completed_at": "2025-06-06T07:06:29.777391Z"}, {"name": "execute", "started_at": "2025-06-06T07:06:29.778255Z", "completed_at": "2025-06-06T07:06:29.834369Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.06530404090881348, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.real_time_pipeline.stg_customer", "compiled": true, "compiled_code": "with source as (\n    select * from \"transactions\".\"public\".\"dim_customer\"\n)\n\nselect\n    customer_id,\n    customer_name,\n    customer_email,\n    registered_at::timestamp as registered_at\nfrom source", "relation_name": "\"transactions\".\"public\".\"stg_customer\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T07:06:29.838339Z", "completed_at": "2025-06-06T07:06:29.840762Z"}, {"name": "execute", "started_at": "2025-06-06T07:06:29.841372Z", "completed_at": "2025-06-06T07:06:29.869905Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.033453941345214844, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.real_time_pipeline.stg_fact_transaction", "compiled": true, "compiled_code": "with source as (\n    select * from \"transactions\".\"public\".\"fact_transaction\"\n)\n\nselect\n    transaction_id,\n    timestamp::timestamp as transaction_ts,\n    customer_id,\n    merchant_id,\n    amount,\n    currency,\n    latitude,\n    longitude,\n    device_id,\n    payment_method,\n    is_foreign,\n    is_fraud\nfrom source", "relation_name": "\"transactions\".\"public\".\"stg_fact_transaction\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T07:06:29.874163Z", "completed_at": "2025-06-06T07:06:29.876921Z"}, {"name": "execute", "started_at": "2025-06-06T07:06:29.877631Z", "completed_at": "2025-06-06T07:06:29.902639Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.030200481414794922, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.real_time_pipeline.stg_merchant", "compiled": true, "compiled_code": "with source as (\n    select * from \"transactions\".\"public\".\"dim_merchant\"\n)\n\nselect\n    merchant_id,\n    merchant_name,\n    merchant_category,\n    country\nfrom source", "relation_name": "\"transactions\".\"public\".\"stg_merchant\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T07:06:29.906774Z", "completed_at": "2025-06-06T07:06:29.910095Z"}, {"name": "execute", "started_at": "2025-06-06T07:06:29.910739Z", "completed_at": "2025-06-06T07:06:29.953352Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04882931709289551, "adapter_response": {"_message": "SELECT 100", "code": "SELECT", "rows_affected": 100}, "message": "SELECT 100", "failures": null, "unique_id": "model.real_time_pipeline.fct_customer_behavior", "compiled": true, "compiled_code": "with transactions as (\n    select * from \"transactions\".\"public\".\"stg_fact_transaction\"\n    \n),\n\ncustomers as (\n    select * from \"transactions\".\"public\".\"stg_customer\"\n),\n\nenriched as (\n    select\n        t.customer_id,\n        c.registered_at,\n        t.transaction_ts,\n        t.amount,\n        t.is_fraud,\n        t.is_foreign\n    from transactions t\n    left join customers c\n        on t.customer_id = c.customer_id\n),\n\ncustomer_metrics as (\n    select\n        customer_id,\n        min(registered_at) as registered_at,\n        count(*) as total_transactions,\n        sum(amount) as total_spent,\n        avg(amount) as avg_transaction_amount,\n        max(amount) as max_transaction_amount,\n        min(amount) as min_transaction_amount,\n        sum(case when is_fraud then 1 else 0 end) as fraud_transactions,\n        round(\n            case \n                when count(*) = 0 then 0\n                else sum(case when is_fraud then 1 else 0 end)::decimal / count(*)\n            end, \n            3\n        ) as fraud_ratio,\n        sum(case when is_foreign then 1 else 0 end) as foreign_tx_count\n    from enriched\n    group by customer_id\n)\n\nselect * from customer_metrics", "relation_name": "\"transactions\".\"public\".\"fct_customer_behavior\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T07:06:29.958998Z", "completed_at": "2025-06-06T07:06:29.962223Z"}, {"name": "execute", "started_at": "2025-06-06T07:06:29.963028Z", "completed_at": "2025-06-06T07:06:29.979614Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022671222686767578, "adapter_response": {"_message": "SELECT 2", "code": "SELECT", "rows_affected": 2}, "message": "SELECT 2", "failures": null, "unique_id": "model.real_time_pipeline.fct_daily_fraud_summary", "compiled": true, "compiled_code": "with transactions as (\n    select * from \"transactions\".\"public\".\"stg_fact_transaction\"\n    \n),\n\ndaily_fraud as (\n    select\n        date_trunc('day', transaction_ts) as tx_date,\n        count(*) as total_tx,\n        sum(case when is_fraud then 1 else 0 end) as fraud_tx,\n        round(\n            case \n                when count(*) = 0 then 0\n                else sum(case when is_fraud then 1 else 0 end)::decimal / count(*)\n            end, \n            3\n        ) as fraud_rate\n    from transactions\n    group by 1\n)\n\nselect * from daily_fraud\norder by tx_date desc", "relation_name": "\"transactions\".\"public\".\"fct_daily_fraud_summary\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T07:06:29.983666Z", "completed_at": "2025-06-06T07:06:29.986560Z"}, {"name": "execute", "started_at": "2025-06-06T07:06:29.987212Z", "completed_at": "2025-06-06T07:06:30.004696Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02324676513671875, "adapter_response": {"_message": "SELECT 2", "code": "SELECT", "rows_affected": 2}, "message": "SELECT 2", "failures": null, "unique_id": "model.real_time_pipeline.fct_daily_revenue", "compiled": true, "compiled_code": "with tx as (\n    select * from \"transactions\".\"public\".\"stg_fact_transaction\"\n    \n)\n\nselect\n    date_trunc('day', transaction_ts) as tx_date,\n    count(*) as tx_count,\n    sum(amount) as total_amount,\n    sum(case when is_fraud then 1 else 0 end) as fraud_count\nfrom tx\ngroup by 1\norder by 1 desc", "relation_name": "\"transactions\".\"public\".\"fct_daily_revenue\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-06T07:06:30.010258Z", "completed_at": "2025-06-06T07:06:30.013942Z"}, {"name": "execute", "started_at": "2025-06-06T07:06:30.018302Z", "completed_at": "2025-06-06T07:06:30.051785Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04375147819519043, "adapter_response": {"_message": "SELECT 20", "code": "SELECT", "rows_affected": 20}, "message": "SELECT 20", "failures": null, "unique_id": "model.real_time_pipeline.fct_merchant_behavior", "compiled": true, "compiled_code": "with transactions as (\n    select * from \"transactions\".\"public\".\"stg_fact_transaction\"\n    \n),\n\nmerchants as (\n    select * from \"transactions\".\"public\".\"stg_merchant\"\n),\n\nenriched as (\n    select\n        t.merchant_id,\n        m.merchant_name,\n        m.merchant_category,\n        m.country,\n        t.amount,\n        t.is_fraud\n    from transactions t\n    left join merchants m\n        on t.merchant_id = m.merchant_id\n),\n\nmerchant_metrics as (\n    select\n        merchant_id,\n        merchant_name,\n        merchant_category,\n        country,\n        count(*) as total_transactions,\n        sum(amount) as total_sales,\n        sum(case when is_fraud then 1 else 0 end) as fraud_transactions,\n        round(\n            sum(case when is_fraud then 1 else 0 end)::decimal / count(*), 3\n        ) as fraud_ratio\n    from enriched\n    group by merchant_id, merchant_name, merchant_category, country\n)\n\nselect * from merchant_metrics\norder by fraud_ratio desc", "relation_name": "\"transactions\".\"public\".\"fct_merchant_behavior\""}], "elapsed_time": 0.36373043060302734, "args": {"send_anonymous_usage_stats": true, "printer_width": 80, "log_level_file": "debug", "quiet": false, "show_resource_report": false, "profiles_dir": "/opt/airflow/dbt", "populate_cache": true, "full_refresh": true, "version_check": true, "cache_selected_only": false, "which": "run", "introspect": true, "project_dir": "/opt/airflow/dbt", "use_colors": true, "use_colors_file": true, "warn_error_options": {"include": [], "exclude": []}, "static_parser": true, "strict_mode": false, "log_level": "info", "log_path": "/opt/airflow/dbt/logs", "invocation_command": "dbt run --full-refresh", "enable_legacy_logger": false, "vars": {}, "select": [], "exclude": [], "print": true, "log_file_max_bytes": 10485760, "defer": false, "partial_parse": true, "macro_debugging": false, "log_format_file": "debug", "partial_parse_file_diff": true, "log_format": "default", "write_json": true, "favor_state": false, "indirect_selection": "eager"}}