x-airflow-common: &airflow-common
  build:
    context: ./airflow
  depends_on:
    - postgres
  environment:
    - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    - AIRFLOW__CORE__FERNET_KEY=${AIRFLOW_FERNET_KEY}
    - AIRFLOW__CORE__LOAD_EXAMPLES=False
    - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW_SECRET_KEY}
    - POSTGRES_USER=${POSTGRES_USER}
    - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    - POSTGRES_DB=${POSTGRES_DB}
  volumes:
    - ./airflow/dags:/opt/airflow/dags
    - ./dbt:/opt/airflow/dbt
    - ./dbt/profiles.yml:/home/airflow/.dbt/profiles.yml

services:

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d

  kafka:
    image: bitnami/kafka:3.5
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes

  kafka-init:
    image: bitnami/kafka:3.5
    depends_on:
      - kafka
    command: >
      bash -c "
      kafka-topics.sh --create --if-not-exists --bootstrap-server kafka:9092 --topic transactions --partitions 3 --replication-factor 1
      echo 'Topics created successfully'
      "
    restart: "no"

  transaction-producer:
    build:
      context: ./kafka/producer
    depends_on:
      - kafka
      - kafka-init
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - POSTGRES_DB=${POSTGRES_DB}           # Add this
      - POSTGRES_USER=${POSTGRES_USER}       # Add this  
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD} # Add this
    command: sh -c "sleep 45 && python transaction_producer.py"
    restart: on-failure  # Add this to handle startup timing issues

  spark-master:
    image: apache/spark:3.5.0
    command: /opt/spark/bin/spark-class org.apache.spark.deploy.master.Master --host spark-master
    environment:
      - SPARK_MASTER_HOST=spark-master
    ports:
      - "7077:7077"
      - "8081:8080"
    volumes:
      - ./spark/jars:/opt/spark/extra-jars

  spark-worker:
    image: apache/spark:3.5.0
    command: /opt/spark/bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    depends_on:
      - spark-master
    ports:
      - "8082:8080"
    volumes:
      - ./spark/jars:/opt/spark/extra-jars

  spark-streaming:
    build:
      context: ./spark/streaming-app
    depends_on:
      - kafka
      - spark-master
      - spark-worker
      - postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    volumes:
      - ./spark/jars:/opt/spark/extra-jars
    command: >
      /opt/spark/bin/spark-submit
      --master spark://spark-master:7077
      --packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.0
      --jars /opt/spark/extra-jars/postgresql-42.6.0.jar,/opt/spark/extra-jars/kafka-clients-3.5.0.jar,/opt/spark/extra-jars/spark-token-provider-kafka-0-10_2.12-3.5.0.jar
      --conf spark.driver.extraClassPath="/opt/spark/extra-jars/*" 
      --conf spark.executor.extraClassPath="/opt/spark/extra-jars/*" 
      transaction_streaming.py

  airflow-init:
    <<: *airflow-common
    depends_on:
      - postgres
    command: |
      bash -c "
        airflow db migrate &&
        airflow users create --username ${AIRFLOW_ADMIN_USERNAME} --password ${AIRFLOW_ADMIN_PASSWORD} --firstname ${AIRFLOW_ADMIN_FIRSTNAME} --lastname ${AIRFLOW_ADMIN_LASTNAME} --role Admin --email ${AIRFLOW_ADMIN_EMAIL}
      "

  airflow-webserver:
    <<: *airflow-common
    depends_on:
      - postgres
      - airflow-init
    ports:
      - "8080:8080"
    command: webserver

  airflow-scheduler:
    <<: *airflow-common
    depends_on:
      - postgres
      - airflow-init
    command: scheduler

  metabase:
    image: metabase/metabase
    platform: linux/amd64
    ports:
      - "3000:3000"
    volumes:
      - metabase-data:/metabase-data
    environment:
      - MB_DB_FILE=/metabase-data/metabase.db

volumes:
  pgdata:
  metabase-data:
